name:  CI/CD

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

# I commented the postgres container to reduce time of CI/CD but we can undo that after adding integration tests
#    services:
#      postgres:
#        image: postgres:12
#        env:
#          POSTGRES_USER: giveth_user
#          POSTGRES_PASSWORD: mypass
#          POSTGRES_DB: giveth
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#        ports:
#          - 5432:5432
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: install dependencies
        run: npm ci
      - name: run tests
        run: npm run test
        env:
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
          XDAI_NODE_HTTP_URL: ${{ secrets.XDAI_NODE_HTTP_URL }}
          INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}


  publish:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/dockerize'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Build image and push to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ github.token }}
          registry: ghcr.io
          repository: giveth/impact-graph
          add_git_labels: true
          # Add branch name to docker image tag @see{@link https://github.com/docker/build-push-action/tree/releases/v1#tag_with_ref}
          tag_with_ref: true
          # Add commit hash to docker image tag @see{@link https://github.com/docker/build-push-action/tree/releases/v1#tag_with_sha}
          tag_with_sha: true

  deploy:
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master'|| github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/dockerize'
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: dockerize deploy
        if: github.ref == 'refs/heads/dockerize'
        uses: garygrossgarten/github-action-ssh@v0.6.4
        with:
          command: cd impact-graph-dockerized && git checkout dockerize && git pull &&  docker-compose -f docker-compose-staging.yml pull && docker-compose -f docker-compose-staging.yml down && docker-compose -f docker-compose-staging.yml up -d && docker image prune -a --force;
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USERNAME }}
          privateKey: ${{ secrets.STAGING_PRIVATE_KEY}}

      - name: staging deploy
        if: github.ref == 'refs/heads/dockerize'
        uses: garygrossgarten/github-action-ssh@v0.6.4
        with:
          command: cd impact-graph && git checkout staging && git pull && npm ci && npm run typeorm:cli:live -- migration:run && npm run serve;
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USERNAME }}
          privateKey: ${{ secrets.STAGING_PRIVATE_KEY}}

      - name: staging deploy
        if: github.ref == 'refs/heads/staging'
        uses: garygrossgarten/github-action-ssh@v0.6.4
        with:
          command: cd impact-graph && git checkout staging && git pull && npm ci && npm run typeorm:cli:live -- migration:run && npm run serve;
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USERNAME }}
          privateKey: ${{ secrets.STAGING_PRIVATE_KEY}}

      - name: production deploy
        if: github.ref == 'refs/heads/master'
        uses: garygrossgarten/github-action-ssh@v0.6.4
        with:
          command: cd impact-graph && git checkout master && git pull && npm ci && npm run typeorm:cli:live -- migration:run && npm run serve;
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          privateKey: ${{ secrets.PRODUCTION_PRIVATE_KEY}}

