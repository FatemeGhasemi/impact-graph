import { GoogleSpreadsheet } from 'google-spreadsheet';

// tslint:disable-next-line:no-var-requires
const moment = require('moment');

export const projectExportSpreadsheet = async (): Promise<
  typeof GoogleSpreadsheet
> => {
  // Initialize the sheet - document ID is the long id in the sheets URL
  const spreadSheet = new GoogleSpreadsheet('<the sheet ID from the url>');

  // Initialize Auth - see https://theoephraim.github.io/node-google-spreadsheet/#/getting-started/authentication
  await spreadSheet.useServiceAccountAuth({
    // env var values are copied from service account credentials generated by google
    // see "Authentication" section in docs for more info
    client_email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,
    private_key: process.env.GOOGLE_PRIVATE_KEY,
  });

  return spreadSheet;
};

export const addSheetWithRows = async (spreadSheet, headers, rows) => {
  const currentDate = moment().toUTCString();

  const sheet = await spreadSheet.addSheet({
    headerValues: headers,
    title: `export: ${currentDate}`,
  });

  // Array of objects with entity data, example:
  // [
  //   { title: 'test', ... },
  //   { title: 'awesome project', ... },
  // ]
  const appendRows = await sheet.addRows(rows);
};
